{"version":3,"file":"object.js","sources":["../../src/-private/object.ts"],"sourcesContent":["import {\n  createStorage,\n  getValue,\n  setValue,\n} from 'ember-tracked-storage-polyfill';\n\nclass TrackedObjectImplementation<T extends object> {\n  static fromEntries<T = unknown>(\n    entries: Iterable<readonly [PropertyKey, T]>,\n  ) {\n    return new TrackedObject(Object.fromEntries(entries));\n  }\n\n  constructor(...args: Record<PropertyKey, never> extends T ? [] | [T] : [T]);\n  constructor(obj = {}) {\n    const proto = Object.getPrototypeOf(obj);\n    const descs = Object.getOwnPropertyDescriptors(obj);\n\n    const clone = Object.create(proto);\n\n    for (const prop in descs) {\n      Object.defineProperty(clone, prop, descs[prop]!);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n\n    return new Proxy(clone, {\n      get(target, prop) {\n        self.#readStorageFor(prop);\n\n        return target[prop];\n      },\n\n      has(target, prop) {\n        self.#readStorageFor(prop);\n\n        return prop in target;\n      },\n\n      ownKeys(target: T) {\n        getValue(self.#collection);\n\n        return Reflect.ownKeys(target);\n      },\n\n      set(target, prop, value) {\n        target[prop] = value;\n\n        self.#dirtyStorageFor(prop);\n        self.#dirtyCollection();\n\n        return true;\n      },\n\n      deleteProperty(target, prop) {\n        if (prop in target) {\n          delete target[prop];\n          self.#dirtyStorageFor(prop);\n          self.#storages.delete(prop);\n          self.#dirtyCollection();\n        }\n\n        return true;\n      },\n\n      getPrototypeOf() {\n        return TrackedObjectImplementation.prototype;\n      },\n    });\n  }\n\n  #storages = new Map();\n\n  #collection = createStorage(null, () => false);\n\n  #readStorageFor(key: PropertyKey) {\n    let storage = this.#storages.get(key);\n\n    if (storage === undefined) {\n      storage = createStorage(null, () => false);\n      this.#storages.set(key, storage);\n    }\n\n    getValue(storage);\n  }\n\n  #dirtyStorageFor(key: PropertyKey) {\n    const storage = this.#storages.get(key);\n\n    if (storage) {\n      setValue(storage, null);\n    }\n  }\n\n  #dirtyCollection() {\n    setValue(this.#collection, null);\n  }\n}\n\nexport interface TrackedObject {\n  fromEntries<T = unknown>(\n    entries: Iterable<readonly [PropertyKey, T]>,\n  ): {\n    [k: string]: T;\n  };\n\n  new <T extends Record<PropertyKey, unknown>>(\n    ...args: Record<PropertyKey, never> extends T ? [] | [T] : [T]\n  ): T;\n}\n\nexport const TrackedObject: TrackedObject =\n  TrackedObjectImplementation as unknown as TrackedObject;\n\nexport default TrackedObject;\n"],"names":["TrackedObjectImplementation","fromEntries","entries","TrackedObject","Object","constructor","obj","proto","getPrototypeOf","descs","getOwnPropertyDescriptors","clone","create","prop","defineProperty","self","Proxy","get","target","has","ownKeys","getValue","Reflect","set","value","deleteProperty","delete","prototype","Map","createStorage","#readStorageFor","key","storage","undefined","#dirtyStorageFor","setValue","#dirtyCollection"],"mappings":"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"}