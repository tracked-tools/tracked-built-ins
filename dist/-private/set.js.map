{"version":3,"file":"set.js","sources":["../../src/-private/set.ts"],"sourcesContent":["import {\n  type TrackedStorage,\n  createStorage,\n  getValue,\n  setValue,\n} from 'ember-tracked-storage-polyfill';\n\nexport class TrackedSet<T = unknown> implements Set<T> {\n  private collection = createStorage(null, () => false);\n\n  private storages: Map<T, TrackedStorage<null>> = new Map();\n\n  private vals: Set<T>;\n\n  private storageFor(key: T): TrackedStorage<null> {\n    const storages = this.storages;\n    let storage = storages.get(key);\n\n    if (storage === undefined) {\n      storage = createStorage(null, () => false);\n      storages.set(key, storage);\n    }\n\n    return storage;\n  }\n\n  private dirtyStorageFor(key: T): void {\n    const storage = this.storages.get(key);\n\n    if (storage) {\n      setValue(storage, null);\n    }\n  }\n\n  constructor();\n  constructor(values: readonly T[] | null);\n  constructor(iterable: Iterable<T>);\n  constructor(existing?: readonly T[] | Iterable<T> | null | undefined) {\n    this.vals = new Set(existing);\n  }\n\n  // **** KEY GETTERS ****\n  has(value: T): boolean {\n    getValue(this.storageFor(value));\n\n    return this.vals.has(value);\n  }\n\n  // **** ALL GETTERS ****\n  entries() {\n    getValue(this.collection);\n\n    return this.vals.entries();\n  }\n\n  keys() {\n    getValue(this.collection);\n\n    return this.vals.keys();\n  }\n\n  values() {\n    getValue(this.collection);\n\n    return this.vals.values();\n  }\n\n  union<U>(other: ReadonlySetLike<U>): Set<T | U> {\n    getValue(this.collection);\n\n    return this.vals.union(other);\n  }\n\n  intersection<U>(other: ReadonlySetLike<U>): Set<T & U> {\n    getValue(this.collection);\n\n    return this.vals.intersection(other);\n  }\n\n  difference<U>(other: ReadonlySetLike<U>): Set<T> {\n    getValue(this.collection);\n\n    return this.vals.difference(other);\n  }\n\n  symmetricDifference<U>(other: ReadonlySetLike<U>): Set<T | U> {\n    getValue(this.collection);\n\n    return this.vals.symmetricDifference(other);\n  }\n\n  isSubsetOf(other: ReadonlySetLike<unknown>): boolean {\n    getValue(this.collection);\n\n    return this.vals.isSubsetOf(other);\n  }\n\n  isSupersetOf(other: ReadonlySetLike<unknown>): boolean {\n    getValue(this.collection);\n\n    return this.vals.isSupersetOf(other);\n  }\n\n  isDisjointFrom(other: ReadonlySetLike<unknown>): boolean {\n    getValue(this.collection);\n\n    return this.vals.isDisjointFrom(other);\n  }\n\n  forEach(fn: (value1: T, value2: T, set: Set<T>) => void): void {\n    getValue(this.collection);\n\n    this.vals.forEach(fn);\n  }\n\n  get size(): number {\n    getValue(this.collection);\n\n    return this.vals.size;\n  }\n\n  [Symbol.iterator]() {\n    getValue(this.collection);\n\n    return this.vals[Symbol.iterator]();\n  }\n\n  get [Symbol.toStringTag](): string {\n    return this.vals[Symbol.toStringTag];\n  }\n\n  // **** KEY SETTERS ****\n  add(value: T): this {\n    this.dirtyStorageFor(value);\n    setValue(this.collection, null);\n\n    this.vals.add(value);\n\n    return this;\n  }\n\n  delete(value: T): boolean {\n    this.dirtyStorageFor(value);\n    setValue(this.collection, null);\n\n    this.storages.delete(value);\n    return this.vals.delete(value);\n  }\n\n  // **** ALL SETTERS ****\n  clear(): void {\n    this.storages.forEach((s) => setValue(s, null));\n    setValue(this.collection, null);\n\n    this.storages.clear();\n    this.vals.clear();\n  }\n}\n\n// So instanceof works\nObject.setPrototypeOf(TrackedSet.prototype, Set.prototype);\n\nexport class TrackedWeakSet<T extends object = object> implements WeakSet<T> {\n  private storages: WeakMap<T, TrackedStorage<null>> = new WeakMap();\n\n  private vals: WeakSet<T>;\n\n  private storageFor(key: T): TrackedStorage<null> {\n    const storages = this.storages;\n    let storage = storages.get(key);\n\n    if (storage === undefined) {\n      storage = createStorage(null, () => false);\n      storages.set(key, storage);\n    }\n\n    return storage;\n  }\n\n  private dirtyStorageFor(key: T): void {\n    const storage = this.storages.get(key);\n\n    if (storage) {\n      setValue(storage, null);\n    }\n  }\n\n  constructor(values?: readonly T[] | null) {\n    this.vals = new WeakSet(values);\n  }\n\n  has(value: T): boolean {\n    getValue(this.storageFor(value));\n\n    return this.vals.has(value);\n  }\n\n  add(value: T): this {\n    // Add to vals first to get better error message\n    this.vals.add(value);\n\n    this.dirtyStorageFor(value);\n\n    return this;\n  }\n\n  delete(value: T): boolean {\n    this.dirtyStorageFor(value);\n\n    this.storages.delete(value);\n    return this.vals.delete(value);\n  }\n\n  get [Symbol.toStringTag](): string {\n    return this.vals[Symbol.toStringTag];\n  }\n}\n\n// So instanceof works\nObject.setPrototypeOf(TrackedWeakSet.prototype, WeakSet.prototype);\n"],"names":["TrackedSet","collection","createStorage","storages","Map","vals","storageFor","key","storage","get","undefined","set","dirtyStorageFor","setValue","constructor","existing","Set","has","value","getValue","entries","keys","values","union","other","intersection","difference","symmetricDifference","isSubsetOf","isSupersetOf","isDisjointFrom","forEach","fn","size","Symbol","iterator","toStringTag","add","delete","clear","s","Object","setPrototypeOf","prototype","TrackedWeakSet","WeakMap","WeakSet"],"mappings":";;AAOO,MAAMA,UAAU,CAAgC;AAC7CC,EAAAA,UAAU,GAAGC,aAAa,CAAC,IAAI,EAAE,MAAM,KAAK,CAAC;AAE7CC,EAAAA,QAAQ,GAAiC,IAAIC,GAAG,EAAE;EAElDC,IAAI;EAEJC,UAAUA,CAACC,GAAM,EAAwB;AAC/C,IAAA,MAAMJ,QAAQ,GAAG,IAAI,CAACA,QAAQ;AAC9B,IAAA,IAAIK,OAAO,GAAGL,QAAQ,CAACM,GAAG,CAACF,GAAG,CAAC;IAE/B,IAAIC,OAAO,KAAKE,SAAS,EAAE;AACzBF,MAAAA,OAAO,GAAGN,aAAa,CAAC,IAAI,EAAE,MAAM,KAAK,CAAC;AAC1CC,MAAAA,QAAQ,CAACQ,GAAG,CAACJ,GAAG,EAAEC,OAAO,CAAC;AAC5B;AAEA,IAAA,OAAOA,OAAO;AAChB;EAEQI,eAAeA,CAACL,GAAM,EAAQ;IACpC,MAAMC,OAAO,GAAG,IAAI,CAACL,QAAQ,CAACM,GAAG,CAACF,GAAG,CAAC;AAEtC,IAAA,IAAIC,OAAO,EAAE;AACXK,MAAAA,QAAQ,CAACL,OAAO,EAAE,IAAI,CAAC;AACzB;AACF;EAKAM,WAAWA,CAACC,QAAwD,EAAE;AACpE,IAAA,IAAI,CAACV,IAAI,GAAG,IAAIW,GAAG,CAACD,QAAQ,CAAC;AAC/B;;AAEA;EACAE,GAAGA,CAACC,KAAQ,EAAW;AACrBC,IAAAA,QAAQ,CAAC,IAAI,CAACb,UAAU,CAACY,KAAK,CAAC,CAAC;AAEhC,IAAA,OAAO,IAAI,CAACb,IAAI,CAACY,GAAG,CAACC,KAAK,CAAC;AAC7B;;AAEA;AACAE,EAAAA,OAAOA,GAAG;AACRD,IAAAA,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAAC;AAEzB,IAAA,OAAO,IAAI,CAACI,IAAI,CAACe,OAAO,EAAE;AAC5B;AAEAC,EAAAA,IAAIA,GAAG;AACLF,IAAAA,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAAC;AAEzB,IAAA,OAAO,IAAI,CAACI,IAAI,CAACgB,IAAI,EAAE;AACzB;AAEAC,EAAAA,MAAMA,GAAG;AACPH,IAAAA,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAAC;AAEzB,IAAA,OAAO,IAAI,CAACI,IAAI,CAACiB,MAAM,EAAE;AAC3B;EAEAC,KAAKA,CAAIC,KAAyB,EAAc;AAC9CL,IAAAA,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAAC;AAEzB,IAAA,OAAO,IAAI,CAACI,IAAI,CAACkB,KAAK,CAACC,KAAK,CAAC;AAC/B;EAEAC,YAAYA,CAAID,KAAyB,EAAc;AACrDL,IAAAA,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAAC;AAEzB,IAAA,OAAO,IAAI,CAACI,IAAI,CAACoB,YAAY,CAACD,KAAK,CAAC;AACtC;EAEAE,UAAUA,CAAIF,KAAyB,EAAU;AAC/CL,IAAAA,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAAC;AAEzB,IAAA,OAAO,IAAI,CAACI,IAAI,CAACqB,UAAU,CAACF,KAAK,CAAC;AACpC;EAEAG,mBAAmBA,CAAIH,KAAyB,EAAc;AAC5DL,IAAAA,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAAC;AAEzB,IAAA,OAAO,IAAI,CAACI,IAAI,CAACsB,mBAAmB,CAACH,KAAK,CAAC;AAC7C;EAEAI,UAAUA,CAACJ,KAA+B,EAAW;AACnDL,IAAAA,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAAC;AAEzB,IAAA,OAAO,IAAI,CAACI,IAAI,CAACuB,UAAU,CAACJ,KAAK,CAAC;AACpC;EAEAK,YAAYA,CAACL,KAA+B,EAAW;AACrDL,IAAAA,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAAC;AAEzB,IAAA,OAAO,IAAI,CAACI,IAAI,CAACwB,YAAY,CAACL,KAAK,CAAC;AACtC;EAEAM,cAAcA,CAACN,KAA+B,EAAW;AACvDL,IAAAA,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAAC;AAEzB,IAAA,OAAO,IAAI,CAACI,IAAI,CAACyB,cAAc,CAACN,KAAK,CAAC;AACxC;EAEAO,OAAOA,CAACC,EAA+C,EAAQ;AAC7Db,IAAAA,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAAC;AAEzB,IAAA,IAAI,CAACI,IAAI,CAAC0B,OAAO,CAACC,EAAE,CAAC;AACvB;EAEA,IAAIC,IAAIA,GAAW;AACjBd,IAAAA,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAAC;AAEzB,IAAA,OAAO,IAAI,CAACI,IAAI,CAAC4B,IAAI;AACvB;EAEA,CAACC,MAAM,CAACC,QAAQ,CAAI,GAAA;AAClBhB,IAAAA,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAAC;IAEzB,OAAO,IAAI,CAACI,IAAI,CAAC6B,MAAM,CAACC,QAAQ,CAAC,EAAE;AACrC;EAEA,KAAKD,MAAM,CAACE,WAAW,CAAY,GAAA;AACjC,IAAA,OAAO,IAAI,CAAC/B,IAAI,CAAC6B,MAAM,CAACE,WAAW,CAAC;AACtC;;AAEA;EACAC,GAAGA,CAACnB,KAAQ,EAAQ;AAClB,IAAA,IAAI,CAACN,eAAe,CAACM,KAAK,CAAC;AAC3BL,IAAAA,QAAQ,CAAC,IAAI,CAACZ,UAAU,EAAE,IAAI,CAAC;AAE/B,IAAA,IAAI,CAACI,IAAI,CAACgC,GAAG,CAACnB,KAAK,CAAC;AAEpB,IAAA,OAAO,IAAI;AACb;EAEAoB,MAAMA,CAACpB,KAAQ,EAAW;AACxB,IAAA,IAAI,CAACN,eAAe,CAACM,KAAK,CAAC;AAC3BL,IAAAA,QAAQ,CAAC,IAAI,CAACZ,UAAU,EAAE,IAAI,CAAC;AAE/B,IAAA,IAAI,CAACE,QAAQ,CAACmC,MAAM,CAACpB,KAAK,CAAC;AAC3B,IAAA,OAAO,IAAI,CAACb,IAAI,CAACiC,MAAM,CAACpB,KAAK,CAAC;AAChC;;AAEA;AACAqB,EAAAA,KAAKA,GAAS;AACZ,IAAA,IAAI,CAACpC,QAAQ,CAAC4B,OAAO,CAAES,CAAC,IAAK3B,QAAQ,CAAC2B,CAAC,EAAE,IAAI,CAAC,CAAC;AAC/C3B,IAAAA,QAAQ,CAAC,IAAI,CAACZ,UAAU,EAAE,IAAI,CAAC;AAE/B,IAAA,IAAI,CAACE,QAAQ,CAACoC,KAAK,EAAE;AACrB,IAAA,IAAI,CAAClC,IAAI,CAACkC,KAAK,EAAE;AACnB;AACF;;AAEA;AACAE,MAAM,CAACC,cAAc,CAAC1C,UAAU,CAAC2C,SAAS,EAAE3B,GAAG,CAAC2B,SAAS,CAAC;AAEnD,MAAMC,cAAc,CAAkD;AACnEzC,EAAAA,QAAQ,GAAqC,IAAI0C,OAAO,EAAE;EAE1DxC,IAAI;EAEJC,UAAUA,CAACC,GAAM,EAAwB;AAC/C,IAAA,MAAMJ,QAAQ,GAAG,IAAI,CAACA,QAAQ;AAC9B,IAAA,IAAIK,OAAO,GAAGL,QAAQ,CAACM,GAAG,CAACF,GAAG,CAAC;IAE/B,IAAIC,OAAO,KAAKE,SAAS,EAAE;AACzBF,MAAAA,OAAO,GAAGN,aAAa,CAAC,IAAI,EAAE,MAAM,KAAK,CAAC;AAC1CC,MAAAA,QAAQ,CAACQ,GAAG,CAACJ,GAAG,EAAEC,OAAO,CAAC;AAC5B;AAEA,IAAA,OAAOA,OAAO;AAChB;EAEQI,eAAeA,CAACL,GAAM,EAAQ;IACpC,MAAMC,OAAO,GAAG,IAAI,CAACL,QAAQ,CAACM,GAAG,CAACF,GAAG,CAAC;AAEtC,IAAA,IAAIC,OAAO,EAAE;AACXK,MAAAA,QAAQ,CAACL,OAAO,EAAE,IAAI,CAAC;AACzB;AACF;EAEAM,WAAWA,CAACQ,MAA4B,EAAE;AACxC,IAAA,IAAI,CAACjB,IAAI,GAAG,IAAIyC,OAAO,CAACxB,MAAM,CAAC;AACjC;EAEAL,GAAGA,CAACC,KAAQ,EAAW;AACrBC,IAAAA,QAAQ,CAAC,IAAI,CAACb,UAAU,CAACY,KAAK,CAAC,CAAC;AAEhC,IAAA,OAAO,IAAI,CAACb,IAAI,CAACY,GAAG,CAACC,KAAK,CAAC;AAC7B;EAEAmB,GAAGA,CAACnB,KAAQ,EAAQ;AAClB;AACA,IAAA,IAAI,CAACb,IAAI,CAACgC,GAAG,CAACnB,KAAK,CAAC;AAEpB,IAAA,IAAI,CAACN,eAAe,CAACM,KAAK,CAAC;AAE3B,IAAA,OAAO,IAAI;AACb;EAEAoB,MAAMA,CAACpB,KAAQ,EAAW;AACxB,IAAA,IAAI,CAACN,eAAe,CAACM,KAAK,CAAC;AAE3B,IAAA,IAAI,CAACf,QAAQ,CAACmC,MAAM,CAACpB,KAAK,CAAC;AAC3B,IAAA,OAAO,IAAI,CAACb,IAAI,CAACiC,MAAM,CAACpB,KAAK,CAAC;AAChC;EAEA,KAAKgB,MAAM,CAACE,WAAW,CAAY,GAAA;AACjC,IAAA,OAAO,IAAI,CAAC/B,IAAI,CAAC6B,MAAM,CAACE,WAAW,CAAC;AACtC;AACF;;AAEA;AACAK,MAAM,CAACC,cAAc,CAACE,cAAc,CAACD,SAAS,EAAEG,OAAO,CAACH,SAAS,CAAC;;;;"}